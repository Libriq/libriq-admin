name: CI â†’ Firebase Hosting

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  PROJECT_ID: libriq-XXXX   # <-- replace with your Firebase projectId

jobs:
  test:
    name: Build & tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      # Create .env for Astro build using GitHub Secrets
      - name: Create .env
        run: |
          cat > .env <<'EOF'
          PUBLIC_FB_API_KEY=${{ secrets.PUBLIC_FB_API_KEY }}
          PUBLIC_FB_AUTH_DOMAIN=${{ secrets.PUBLIC_FB_AUTH_DOMAIN }}
          PUBLIC_FB_DB_URL=${{ secrets.PUBLIC_FB_DB_URL }}
          PUBLIC_FB_PROJECT_ID=${{ secrets.PUBLIC_FB_PROJECT_ID }}
          PUBLIC_FB_APP_ID=${{ secrets.PUBLIC_FB_APP_ID }}
          PUBLIC_FB_MESSAGING_SENDER_ID=${{ secrets.PUBLIC_FB_MESSAGING_SENDER_ID }}
          PUBLIC_FB_MEASUREMENT_ID=${{ secrets.PUBLIC_FB_MEASUREMENT_ID }}
          EOF

      - run: npm ci
      - run: npm run typecheck --if-present
      - run: npm run lint --if-present
      - run: npm test --if-present
      - run: npm run build

  deploy_preview:
    name: Deploy preview (PR)
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Create .env
        run: |
          cat > .env <<'EOF'
          PUBLIC_FB_API_KEY=${{ secrets.PUBLIC_FB_API_KEY }}
          PUBLIC_FB_AUTH_DOMAIN=${{ secrets.PUBLIC_FB_AUTH_DOMAIN }}
          PUBLIC_FB_DB_URL=${{ secrets.PUBLIC_FB_DB_URL }}
          PUBLIC_FB_PROJECT_ID=${{ secrets.PUBLIC_FB_PROJECT_ID }}
          PUBLIC_FB_APP_ID=${{ secrets.PUBLIC_FB_APP_ID }}
          PUBLIC_FB_MESSAGING_SENDER_ID=${{ secrets.PUBLIC_FB_MESSAGING_SENDER_ID }}
          PUBLIC_FB_MEASUREMENT_ID=${{ secrets.PUBLIC_FB_MEASUREMENT_ID }}
          EOF

      - run: npm ci
      - run: npm run build

      - name: Deploy to Firebase preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIBRIQ }}
          projectId: ${{ env.PROJECT_ID }}
          channelId: pr-${{ github.event.pull_request.number }}

  deploy_prod:
    name: Deploy to production (main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Create .env
        run: |
          cat > .env <<'EOF'
          PUBLIC_FB_API_KEY=${{ secrets.PUBLIC_FB_API_KEY }}
          PUBLIC_FB_AUTH_DOMAIN=${{ secrets.PUBLIC_FB_AUTH_DOMAIN }}
          PUBLIC_FB_DB_URL=${{ secrets.PUBLIC_FB_DB_URL }}
          PUBLIC_FB_PROJECT_ID=${{ secrets.PUBLIC_FB_PROJECT_ID }}
          PUBLIC_FB_APP_ID=${{ secrets.PUBLIC_FB_APP_ID }}
          PUBLIC_FB_MESSAGING_SENDER_ID=${{ secrets.PUBLIC_FB_MESSAGING_SENDER_ID }}
          PUBLIC_FB_MEASUREMENT_ID=${{ secrets.PUBLIC_FB_MEASUREMENT_ID }}
          EOF

      - run: npm ci
      - run: npm run build

      - name: Deploy to Firebase live
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIBRIQ }}
          projectId: ${{ env.PROJECT_ID }}
          channelId: live

